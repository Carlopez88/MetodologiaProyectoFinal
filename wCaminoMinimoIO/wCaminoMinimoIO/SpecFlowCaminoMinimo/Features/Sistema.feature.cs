// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace SpecFlowCaminoMinimo.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public partial class SistemaFeature : object, Xunit.IClassFixture<SistemaFeature.FixtureData>, System.IDisposable
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
        private Xunit.Abstractions.ITestOutputHelper _testOutputHelper;
        
#line 1 "Sistema.feature"
#line hidden
        
        public SistemaFeature(SistemaFeature.FixtureData fixtureData, SpecFlowCaminoMinimo_XUnitAssemblyFixture assemblyFixture, Xunit.Abstractions.ITestOutputHelper testOutputHelper)
        {
            this._testOutputHelper = testOutputHelper;
            this.TestInitialize();
        }
        
        public static void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "Sistema", "\tCalcular la ruta más rápida o el camino más óptimo que tarda trasladarse de un p" +
                    "unto A a un punto B en el mapa", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        public virtual void TestInitialize()
        {
        }
        
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<Xunit.Abstractions.ITestOutputHelper>(_testOutputHelper);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        void System.IDisposable.Dispose()
        {
            this.TestTearDown();
        }
        
        [Xunit.SkippableTheoryAttribute(DisplayName="Calcular esfuerzo total resultante del camino mínimo")]
        [Xunit.TraitAttribute("FeatureTitle", "Sistema")]
        [Xunit.TraitAttribute("Description", "Calcular esfuerzo total resultante del camino mínimo")]
        [Xunit.InlineDataAttribute("Café_Rocher_-_Casa_Paul", "5", new string[0])]
        [Xunit.InlineDataAttribute("Café_Rocher_-_Casa_Port", "6", new string[0])]
        [Xunit.InlineDataAttribute("Casa_Paul_-_Café_Rocher", "5", new string[0])]
        [Xunit.InlineDataAttribute("Casa_Paul_-_Casa_Blanca", "3", new string[0])]
        [Xunit.InlineDataAttribute("Casa_Paul_-_Estación_Policía", "6", new string[0])]
        [Xunit.InlineDataAttribute("Casa_Blanca_-_Casa_Paul", "3", new string[0])]
        [Xunit.InlineDataAttribute("Casa_Blanca_-_Casa_Linda", "3", new string[0])]
        [Xunit.InlineDataAttribute("Casa_Blanca_-_Banco_Ayuda", "4", new string[0])]
        [Xunit.InlineDataAttribute("Supermercado_Lina_-_Banco_Ayuda", "8", new string[0])]
        [Xunit.InlineDataAttribute("Supermercado_Lina_-_CComercial_Shean", "7", new string[0])]
        [Xunit.InlineDataAttribute("Casa_Linda_-_Casa_Blanca", "3", new string[0])]
        [Xunit.InlineDataAttribute("Banco_Ayuda_-_Casa_Blanca", "4", new string[0])]
        [Xunit.InlineDataAttribute("Banco_Ayuda_-_Supermercado_Lina", "8", new string[0])]
        [Xunit.InlineDataAttribute("Banco_Ayuda_-_CComercial_Shean", "10", new string[0])]
        [Xunit.InlineDataAttribute("Banco_Ayuda_-_Casa_Del_Sol", "6", new string[0])]
        [Xunit.InlineDataAttribute("Banco_Ayuda_-_Estación_Policía", "6", new string[0])]
        [Xunit.InlineDataAttribute("Hacienda_Frank_-_CComercial_Shean", "5", new string[0])]
        [Xunit.InlineDataAttribute("CComercial_Shean_-_Supermercado_Lina", "7", new string[0])]
        [Xunit.InlineDataAttribute("CComercial_Shean_-_Banco_Ayuda", "10", new string[0])]
        [Xunit.InlineDataAttribute("CComercial_Shean_-_Hacienda_Frank", "5", new string[0])]
        [Xunit.InlineDataAttribute("Casa_Del_Sol_-_Banco_Ayuda", "6", new string[0])]
        [Xunit.InlineDataAttribute("Casa_Del_Sol_-_Tronchatoro", "3", new string[0])]
        [Xunit.InlineDataAttribute("Casa_Del_Sol_-_Estación_Policía", "8", new string[0])]
        [Xunit.InlineDataAttribute("Tronchatoro_-_Casa_Del_Sol", "3", new string[0])]
        [Xunit.InlineDataAttribute("Tronchatoro_-_Estación_Policía", "4", new string[0])]
        [Xunit.InlineDataAttribute("Estación_Policía_-_Casa_Paul", "6", new string[0])]
        [Xunit.InlineDataAttribute("Estación_Policía_-_Banco_Ayuda", "6", new string[0])]
        [Xunit.InlineDataAttribute("Estación_Policía_-_Casa_Del_Sol", "8", new string[0])]
        [Xunit.InlineDataAttribute("Estación_Policía_-_Tronchatoro", "4", new string[0])]
        [Xunit.InlineDataAttribute("Estación_Policía_-_Casa_Port", "5", new string[0])]
        [Xunit.InlineDataAttribute("Casa_Port_-_Café_Rocher", "6", new string[0])]
        [Xunit.InlineDataAttribute("Casa_Port_-_Estación_Policía", "5", new string[0])]
        [Xunit.InlineDataAttribute("Casa_Port_-_Casa_Embrujada", "1", new string[0])]
        [Xunit.InlineDataAttribute("Casa_Embrujada_-_Casa_Port", "1", new string[0])]
        public virtual void CalcularEsfuerzoTotalResultanteDelCaminoMinimo(string arista, string esfuerzo, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Arista", arista);
            argumentsOfScenario.Add("Esfuerzo", esfuerzo);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Calcular esfuerzo total resultante del camino mínimo", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 11
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 12
 testRunner.Given("el punto de partida para calcular el esfuerzo total es Estación_Policía", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 13
 testRunner.And("el punto de llegada para calcular el esfuerzo total es Supermercado_Lina", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 14
 testRunner.When("el usuario seleccione el botón Camino Mínimo", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 15
 testRunner.Then("el sistema muestra como resultado del esfuerzo total del camino mínimo 14", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
        [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        public class FixtureData : System.IDisposable
        {
            
            public FixtureData()
            {
                SistemaFeature.FeatureSetup();
            }
            
            void System.IDisposable.Dispose()
            {
                SistemaFeature.FeatureTearDown();
            }
        }
    }
}
#pragma warning restore
#endregion
